@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@@model @Model.ViewDataTypeName

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
    @:ViewData["Title"] = "@Model.ViewName";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @://Layout = "@Model.LayoutPageFile";
        }
@:}
@:
@:<div class="page-content">
    @:<div class="card mb-3">
        @:<div class="card-body py-2"> 
            @:<a  asp-action="Index" class="btn-floating btn-info btn-sm my-0 mx-1 waves-effect waves-light float-end" title="Go to listing page"><i class="fa fa-list"></i></a>            
            <h3 class="m-0">@Model.ViewName</h3>
        @:</div>
    @:</div>
@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@Model.ViewName</title>
@:</head>
@:<body>
@:
        //    PushIndent("    ");
    }
}
    <div class="alert alert-danger text-center">Are you sure you want to delete this record?</div>

    <form asp-action="@Model.ViewName" class="formLoader">
        <div class="card">
            <div class="card-body"> 
                <div class="row">
    @{
        Dictionary<string, IPropertyMetadata> propertyLookup = ((IModelMetadata)Model.ModelMetadata).Properties.ToDictionary(x => x.PropertyName, x => x);
        Dictionary<string, INavigationMetadata> navigationLookup = ((IModelMetadata)Model.ModelMetadata).Navigations.ToDictionary(x => x.AssociationPropertyName, x => x);

                foreach (var item in Model.ModelMetadata.ModelType.GetProperties())
                {
                    @:
                    if (propertyLookup.TryGetValue(item.Name, out IPropertyMetadata property)
                        && property.Scaffold && !property.IsForeignKey && !property.IsPrimaryKey)
                    {

                    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3">
                        <div class="box">
                            <span class="caption">@@Html.DisplayNameFor(model => model.@GetValueExpression(property))&nbsp;</span>
                            <div class="value">@@Html.DisplayFor(model => model.@GetValueExpression(property))&nbsp;</div>
                        </div><!--.box-->
                    </div><!--.col-->

                    }
                    else if (navigationLookup.TryGetValue(item.Name, out INavigationMetadata navigation))
                    { 

                    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3">
                        <div class="box">
                            <span class="caption">@@Html.DisplayNameFor(model => model.@GetValueExpression(navigation))&nbsp;</span>
                            <div class="value">@@Html.DisplayFor(model => model.@GetValueExpression(navigation).@navigation.DisplayPropertyName)&nbsp;</div>
                        </div><!--.box-->
                    </div><!--.col-->

                    }
                }
     
                foreach (var property in Model.ModelMetadata.Properties)
                {
                    if(property.IsPrimaryKey){
                    @:<div class="col-xs-12 col-sm-6 col-md-4 col-lg-3 d-none">
                        @:<input type="hidden" asp-for="@GetValueExpression(property)" />
                    @:</div><!--.col-->
                    @:
                    }
                }
        
                @:</div><!--.row-->
            @:</div><!--.card-body-->
            @:<div class="card-footer">
                @:<button type="submit" class="btn btn-danger"><i class="fa fa-trash"></i> Delete</button>
            @:</div><!--.card-footer-->
        @:</div><!--.card-->
    @:</form>
@:</div><!--.page-content-->
    if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
        //ClearIndent();
@:</body>
@:</html>
    }
}
@functions
{
    string GetValueExpression(IPropertyMetadata property)
    {
        return property.PropertyName;
    }

    string GetValueExpression(INavigationMetadata navigation)
    {
        return navigation.AssociationPropertyName;
    }
}
